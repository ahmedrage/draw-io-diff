name: Draw.io PR Diagram Changes
on:
  pull_request:
    paths:
      - "**.drawio"

permissions:
  contents: read
  pull-requests: write

jobs:
  compare-diagrams:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr-version

      - name: Export new diagram version
        uses: rlespinasse/drawio-export-action@v2
        with:
          format: png
          transparent: true
          output: exported-diagrams
          path: pr-version

      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base-version

      - name: Export old diagram version
        uses: rlespinasse/drawio-export-action@v2
        with:
          format: png
          transparent: true
          output: exported-diagrams
          path: base-version

      - name: Upload Images and Create Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs').promises;
            const path = require('path');
            
            // Function to get all .drawio files
            async function findDrawioFiles(dir) {
              const files = await fs.readdir(dir);
              return files.filter(file => file.endsWith('.drawio'));
            }
            
            // Function to create comment with attachments
            async function createCommentWithAttachments(files) {
              let body = '### Draw.io Diagram Changes\n\n';
              
              for (const file of files) {
                const baseName = path.basename(file, '.drawio');
                const beforePath = `base-version/diagrams/exported-diagrams/${baseName}-Page-1.png`;
                const afterPath = `pr-version/diagrams/exported-diagrams/${baseName}-Page-1.png`;
                
                body += `#### ${file}\n\n`;
                body += '**Before:**\n\n';
                body += `![Before](${beforePath})\n\n`;
                body += '**After:**\n\n';
                body += `![After](${afterPath})\n\n`;
                body += '---\n\n';
              }
              
              // Get attachment paths
              const attachments = [];
              for (const file of files) {
                const baseName = path.basename(file, '.drawio');
                try {
                  await fs.access(`base-version/diagrams/exported-diagrams/${baseName}-Page-1.png`);
                  attachments.push({
                    name: `${baseName}-before.png`,
                    path: `base-version/diagrams/exported-diagrams/${baseName}-Page-1.png`
                  });
                } catch (e) {
                  console.log(`No before image for ${baseName}`);
                }
                
                try {
                  await fs.access(`pr-version/diagrams/exported-diagrams/${baseName}-Page-1.png`);
                  attachments.push({
                    name: `${baseName}-after.png`,
                    path: `pr-version/diagrams/exported-diagrams/${baseName}-Page-1.png`
                  });
                } catch (e) {
                  console.log(`No after image for ${baseName}`);
                }
              }
              
              try {
                const response = await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: body,
                  attachments: attachments
                });
                console.log('Comment created successfully');
                return response;
              } catch (error) {
                console.error('Error creating comment:', error);
                throw error;
              }
            }
            
            // Main execution
            try {
              const drawioFiles = await findDrawioFiles('pr-version/diagrams');
              await createCommentWithAttachments(drawioFiles);
            } catch (error) {
              console.error('Error in main execution:', error);
              throw error;
            }