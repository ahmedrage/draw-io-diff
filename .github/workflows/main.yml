name: Draw.io PR Diagram Comparison
on:
  pull_request:
    paths:
      - "**.drawio"

# Add required permissions
permissions:
  contents: read
  pull-requests: write

jobs:
  compare-diagrams:
    runs-on: ubuntu-latest
    steps:
      # First checkout - PR version
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr-version

      - name: Export new diagram version
        uses: rlespinasse/drawio-export-action@v2
        with:
          format: png
          transparent: true
          output: diagrams/new-diagrams
          path: pr-version

      # Second checkout - Base version
      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base-version

      - name: Export old diagram version
        uses: rlespinasse/drawio-export-action@v2
        with:
          format: png
          transparent: true
          output: diagrams/old-diagrams
          path: base-version

      - name: Find changed diagrams
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **.drawio
          path: pr-version

      - name: Generate comparison comment
        id: generate-comment
        run: |
          comment="### Draw.io Diagram Changes\n\n"
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            filename=$(basename "$file")
            base_name="${filename%.*}"
            
            echo "Processing file: $filename"
            echo "Base name: $base_name"
            
            # Add error handling and verification
            OLD_PATH="base-version/diagrams/old-diagrams/${base_name}-Page-1.png"
            NEW_PATH="pr-version/diagrams/new-diagrams/${base_name}-Page-1.png"
            
            if [ -f "$OLD_PATH" ]; then
              old_image=$(base64 -w 0 "$OLD_PATH")
            else
              echo "Warning: Could not find old image at $OLD_PATH"
              old_image=""
            fi
            
            if [ -f "$NEW_PATH" ]; then
              new_image=$(base64 -w 0 "$NEW_PATH")
            else
              echo "Warning: Could not find new image at $NEW_PATH"
              new_image=""
            fi
            
            comment="${comment}#### ${filename}\n\n"
            comment="${comment}**Before:**\n"
            comment="${comment}<img src=\"data:image/png;base64,${old_image}\" width=\"500\">\n\n"
            comment="${comment}**After:**\n"
            comment="${comment}<img src=\"data:image/png;base64,${new_image}\" width=\"500\">\n\n"
            comment="${comment}---\n\n"
          done
          
          echo "comment<<EOF" >> $GITHUB_OUTPUT
          echo "$comment" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: prNumber,
              body: `${{ steps.generate-comment.outputs.comment }}`
            });